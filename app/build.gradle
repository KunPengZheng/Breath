apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    signingConfigs {
        release {
            storeFile file('signature/breath.jks')
            storePassword '123456'
            keyAlias = 'key'
            keyPassword '123456'
        }
        debug {
            storeFile file('signature/breath.jks')
            storePassword '123456'
            keyAlias = 'key'
            keyPassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.zkp.breath"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        // 添加多dex分包支持
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            // 混淆
            minifyEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
    }

    greendao {
        //数据库版本号
        schemaVersion 1
        // 设置DaoMaster、DaoSession、Dao 包名
        daoPackage 'com.zkp.breath.database.greendao'
        //设置DaoMaster、DaoSession、Dao目录,请注意，这里路径用/不要用.
        targetGenDir 'src/main/java'
        //设置为true以自动生成单元测试。
        generateTests false
        //应存储生成的单元测试的基本目录。默认为 src / androidTest / java。
        //targetGenDirTests 'src/androidTest/java'
    }

    // MVVM框架所需，进行v和vm的双向自动响应的绑定
    dataBinding {
        enabled true
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'

    testImplementation 'junit:junit:4.12'
    // 模拟框架（一般用于jvm的单元测试隔离android库的依赖）
    testImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // 依赖协程核心库
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines"
    // 依赖当前平台所对应的平台库
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"
    kapt "androidx.databinding:databinding-compiler-common:$gradle_version"

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation project(':zkplib')
    implementation project(':httpprotocol')

    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'

    implementation 'com.blankj:utilcodex:1.25.1'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'com.jakewharton:butterknife:10.1.0'

    implementation 'org.greenrobot:greendao:3.2.2'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    implementation 'com.squareup.retrofit2:retrofit:2.8.1'

    // 测试集成腾讯云IM（tuikit版本，包含UI）
//    implementation 'com.tencent.imsdk:tuikit:4.5.45'

    // sp升级版框架（基于内存映射原理）
    implementation 'com.tencent:mmkv:1.0.23'

    // BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'

    // 基于今日头条适配方案的屏幕适配库
    implementation 'me.jessyan:autosize:1.2.1'

    // disklrucache
    implementation 'com.jakewharton:disklrucache:2.0.2'

    // 阿里路由
    implementation 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    kapt 'com.alibaba:arouter-compiler:1.2.2'

    // 浏览器查看sp或者数据库神器
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

    // 内存泄露检验工具
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    // 界面卡顿工具
    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'

    // 友盟基础组件库（所有友盟业务SDK都依赖基础组件库）
    implementation "com.umeng.umsdk:common:2.1.0"
    // 友盟统计SDK
    implementation "com.umeng.umsdk:analytics:8.1.3"
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    implementation 'com.umeng.umsdk:utdid:1.1.5.3'
    //PushSDK
    implementation 'com.umeng.umsdk:push:6.0.1'

    // material-dialogs
    implementation 'com.afollestad.material-dialogs:core:3.2.1'
}

//kapt {
//    generateStubs = true
//}
