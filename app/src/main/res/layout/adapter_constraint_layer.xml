<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">


    <!--
       Layer功能上可以理解为包含它所引用的view的一个父布局viewGroup，但并不会增加layout的层级。这点是非常好用的，
       在Layer之前，想往自己view统一加个背景限制，一般都是另外加个view来做纯背景展示。

       解析：Layer最大给功能在于可以不设置布局属性（tools:ignore="MissingConstraints"）就把目标控件给整合在一起，
            这样防止目标控件必须处于同一个父级控件才能进行整合造成的耦合，所以目标控件的布局是完解耦和自由的；而目标控
            件的布局也可以相对于layer控件进行。
    -->

    <androidx.constraintlayout.helper.widget.Layer
        android:id="@+id/layer"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/color804488FF"
        app:constraint_referenced_ids="iv,tv,tv2"
        tools:ignore="MissingConstraints" />

    <ImageView
        android:id="@+id/iv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:src="@mipmap/ic_launcher_round"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/tv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:paddingTop="5dp"
        android:text="哈哈哈"
        android:textColor="#FFFFFF"
        app:layout_constraintLeft_toLeftOf="@id/iv"
        app:layout_constraintRight_toRightOf="@id/iv"
        app:layout_constraintTop_toBottomOf="@id/iv" />


    <TextView
        android:id="@+id/tv2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:paddingTop="5dp"
        android:text="呵呵呵"
        android:textColor="#FFFFFF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>